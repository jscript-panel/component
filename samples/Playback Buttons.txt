// ==PREPROCESSOR==
// @name "Playback Buttons"
// @author "marc2003"
// @import "%fb2k_component_path%helpers.txt"
// @import "%fb2k_component_path%samples\js\lodash.min.js"
// @import "%fb2k_component_path%samples\js\common.js"
// @import "%fb2k_component_path%samples\js\panel.js"
// ==/PREPROCESSOR==

/*
Most samples already require FontAwesome and it's used for the default buttons.
https://github.com/FortAwesome/Font-Awesome/blob/4.x/fonts/fontawesome-webfont.ttf?raw=true

The Segoe Fluent Icons font is already included with Windows 11. Windows 10 users can download it here:
https://download.microsoft.com/download/8/f/c/8fc7cbc3-177e-4a22-af48-2a85e1c5bffb/Segoe-Fluent-Icons.zip

If installed, you can right click the panel and change the button set.
*/

var colours = {
	buttons : RGB(255, 255, 255),
	background : RGB(30, 30, 30),
	sac : RGB(196, 30, 35),
};

//////////////////////////////////////////////////////////////

var panel = new _panel();
var buttons = new _buttons();
var bs = _scale(24);
var button_set_idx = 0;
var fluent_font = 'Segoe Fluent Icons';
var has_font = utils.CheckFont(fluent_font);

var char_set = [chars, fluent_chars];

if (has_font) {
	button_set_idx = window.GetProperty('2K3.BUTTON.SET', 0);
}

buttons.update = function () {
	var x = ((panel.w - bs * 4) / 2);
	var y = Math.round((panel.h - bs) / 2);
	this.buttons.stop = new _button(x, y, bs, bs, { char : char_set[button_set_idx].stop, colour:fb.StopAfterCurrent ? colours.sac : colours.buttons}, null, function () { fb.Stop(); }, 'Stop');
	this.buttons.previous = new _button(x + bs, y, bs, bs, { char : char_set[button_set_idx].prev, colour:colours.buttons }, null, function () { fb.Prev(); }, 'Previous');
	this.buttons.play = new _button(x + (bs * 2), y, bs, bs, { char : !fb.IsPlaying || fb.IsPaused ? char_set[button_set_idx].play : char_set[button_set_idx].pause, colour:colours.buttons}, null, function () { fb.PlayOrPause(); }, !fb.IsPlaying || fb.IsPaused ? 'Play' : 'Pause');
	this.buttons.next = new _button(x + (bs * 3), y, bs, bs, { char : char_set[button_set_idx].next, colour:colours.buttons }, null, function () { fb.Next(); }, 'Next');

	if (button_set_idx == 1) {
		this.change_font(fluent_font);
	}
}

function on_mouse_lbtn_up(x, y) {
	buttons.lbtn_up(x, y);
}

function on_mouse_leave() {
	buttons.leave();
}

function on_mouse_move(x, y) {
	buttons.move(x, y);
}

function on_mouse_rbtn_up(x, y) {
	if (buttons.buttons.stop.containsXY(x, y)) {
		fb.StopAfterCurrent = !fb.StopAfterCurrent;
		return true;
	}

	var menu = window.CreatePopupMenu();
	var sub = window.CreatePopupMenu();
	sub.AppendMenuItem(MF_STRING, 1, 'Original');
	sub.AppendMenuItem(EnableMenuIf(has_font), 2, 'Fluent');
	sub.CheckMenuRadioItem(1, 2, button_set_idx + 1);
	sub.AppendTo(menu, MF_STRING, 'Buttons');
	menu.AppendMenuSeparator();
	menu.AppendMenuItem(MF_STRING, 3, 'Configure');

	var idx = menu.TrackPopupMenu(x, y);
	menu.Dispose();

	switch (idx ) {
	case 1:
	case 2:
		button_set_idx = idx - 1;
		window.SetProperty('2K3.BUTTON.SET', button_set_idx);
		buttons.update();
		window.Repaint();
		break;
	case 3:
		window.ShowConfigure();
		break;
	}

	return true;
}

function on_paint(gr) {
	gr.FillRectangle(0, 0, panel.w, panel.h, colours.background);
	buttons.paint(gr);
}

function on_playback_pause() {
	buttons.update();
	window.Repaint();
}

function on_playback_starting() {
	buttons.update();
	window.Repaint();
}

function on_playback_stop() {
	buttons.update();
	window.Repaint();
}

function on_playlist_stop_after_current_changed() {
	buttons.update();
	window.Repaint();
}

function on_size() {
	panel.size();
	buttons.update();
}
