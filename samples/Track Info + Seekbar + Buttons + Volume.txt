// ==PREPROCESSOR==
// @name "Track Info + Seekbar + Buttons + Volume"
// @author "marc2003"
// @import "%fb2k_component_path%helpers.txt"
// @import "%fb2k_component_path%samples\js\lodash.min.js"
// @import "%fb2k_component_path%samples\js\common.js"
// @import "%fb2k_component_path%samples\js\panel.js"
// @import "%fb2k_component_path%samples\js\seekbar.js"
// @import "%fb2k_component_path%samples\js\volume.js"
// ==/PREPROCESSOR==

/*
Most samples already require FontAwesome and it's used for the default buttons.
https://github.com/FortAwesome/Font-Awesome/blob/4.x/fonts/fontawesome-webfont.ttf?raw=true

The Segoe Fluent Icons font is already included with Windows 11. Windows 10 users can download it here:
https://download.microsoft.com/download/8/f/c/8fc7cbc3-177e-4a22-af48-2a85e1c5bffb/Segoe-Fluent-Icons.zip

If installed, you can right click the panel and change the button set.
*/

var colours = {
	buttons : RGB(255, 255, 255),
	background : RGB(30, 30, 30),
	title : RGB(255, 255, 255),
	artist : RGB(240, 240, 240),
	time : RGB(240, 240, 240),
	slider_background : RGB(160, 160, 160),
	slider_colour : RGB(255, 255, 255),
	slider_contrast : RGB(196, 30, 35),
	sac : RGB(196, 30, 35),
};

var tfo = {
	artist : fb.TitleFormat('%artist%'),
	title : fb.TitleFormat('%title%'),
	playback_time : fb.TitleFormat('[%playback_time%]'),
	length : fb.TitleFormat('$if2(%length%,LIVE)'),
};

//////////////////////////////////////////////////////////////

var panel = new _panel();
var seekbar = new _seekbar(0, 0, 0, 0);
var volume = new _volume(0, 0, 0, 0);
var buttons = new _buttons();
var button_set_idx = 0;
var fluent_font = 'Segoe Fluent Icons';
var has_font = utils.CheckFont(fluent_font);
var img = null;
var bs = _scale(24);
window.MaxHeight = _scale(150);

var char_set = [chars, fluent_chars];

if (has_font) {
	button_set_idx = window.GetProperty('2K3.BUTTON.SET', 0);
}

on_playback_new_track(fb.GetNowPlaying());

buttons.update = function () {
	var x = seekbar.x + ((seekbar.w - bs * 4) / 2);
	var y = (seekbar.y - bs) / 2;
	this.buttons.stop = new _button(x, y, bs, bs, { char : char_set[button_set_idx].stop, colour:fb.StopAfterCurrent ? colours.sac : colours.buttons}, null, function () { fb.Stop(); }, 'Stop');
	this.buttons.previous = new _button(x + bs, y, bs, bs, { char : char_set[button_set_idx].prev, colour:colours.buttons }, null, function () { fb.Prev(); }, 'Previous');
	this.buttons.play = new _button(x + (bs * 2), y, bs, bs, { char : !fb.IsPlaying || fb.IsPaused ? char_set[button_set_idx].play : char_set[button_set_idx].pause, colour:colours.buttons}, null, function () { fb.PlayOrPause(); }, !fb.IsPlaying || fb.IsPaused ? 'Play' : 'Pause');
	this.buttons.next = new _button(x + (bs * 3), y, bs, bs, { char : char_set[button_set_idx].next, colour:colours.buttons }, null, function () { fb.Next(); }, 'Next');

	x = seekbar.x + seekbar.w + _scale(60);
	y = Math.round((panel.h - bs) / 2);

	this.buttons.console = new _button(x, y, bs, bs, {char : char_set[button_set_idx].console, colour:colours.buttons }, null, function () { fb.ShowConsole(); }, 'Console');
	this.buttons.search = new _button(x + bs, y, bs, bs, { char : char_set[button_set_idx].search, colour:colours.buttons }, null, function () { fb.RunMainMenuCommand('Library/Search'); }, 'Library Search');
	this.buttons.preferences = new _button(x + (bs * 2), y, bs, bs, { char : char_set[button_set_idx].preferences, colour:colours.buttons}, null, function () { fb.ShowPreferences(); }, 'Preferences');
	this.buttons.volume = new _button(x + (bs * 4), y, bs, bs, { char : char_set[button_set_idx].volume, colour:colours.buttons }, null, function () { fb.VolumeMute(); }, 'Mute Volume');

	if (button_set_idx == 1) {
		this.change_font(fluent_font);
	}
}

function update_album_art(metadb) {
	if (img) img.Dispose();
	img = null;
	if (metadb) {
		img = metadb.GetAlbumArt();
	}
	window.Repaint();
}

function on_mouse_lbtn_down(x, y) {
	seekbar.lbtn_down(x, y);
	volume.lbtn_down(x, y);
}

function on_mouse_lbtn_up(x, y) {
	if (x < panel.h && fb.IsPlaying && img) {
		fb.GetNowPlaying().ShowAlbumArtViewer();
		return;
	}
	if (buttons.lbtn_up(x, y)) {
		return;
	}
	if (seekbar.lbtn_up(x, y)) {
		return;
	}
	if (volume.lbtn_up(x, y)) {
		return;
	}
	fb.RunMainMenuCommand('View/Show now playing in playlist');
}

function on_mouse_leave() {
	buttons.leave();
}

function on_mouse_move(x, y) {
	window.SetCursor(x < panel.h && fb.IsPlaying && img ? IDC_HAND : IDC_ARROW);
	if (buttons.move(x, y)) {
		return;
	}
	if (seekbar.move(x, y)) {
		return;
	}
	volume.move(x, y);
}

function on_mouse_rbtn_up(x, y) {
	if (buttons.buttons.stop.containsXY(x, y)) {
		fb.StopAfterCurrent = !fb.StopAfterCurrent;
		return true;
	}

	var menu = window.CreatePopupMenu();
	var sub = window.CreatePopupMenu();
	sub.AppendMenuItem(MF_STRING, 1, 'Original');
	sub.AppendMenuItem(EnableMenuIf(has_font), 2, 'Fluent');
	sub.CheckMenuRadioItem(1, 2, button_set_idx + 1);
	sub.AppendTo(menu, MF_STRING, 'Buttons');
	menu.AppendMenuSeparator();
	menu.AppendMenuItem(MF_STRING, 3, 'Configure');

	var idx = menu.TrackPopupMenu(x, y);
	menu.Dispose();

	switch (idx ) {
	case 1:
	case 2:
		button_set_idx = idx - 1;
		window.SetProperty('2K3.BUTTON.SET', button_set_idx);
		buttons.update();
		window.Repaint();
		break;
	case 3:
		window.ShowConfigure();
		break;
	}

	return true;
}

function on_mouse_wheel(s) {
	if (seekbar.wheel(s)) {
		return;
	}
	volume.wheel(s);
}

function on_paint(gr) {
	gr.FillRectangle(0, 0, panel.w, panel.h, colours.background);

	gr.FillRectangle(seekbar.x, seekbar.y, seekbar.w + _scale(6), seekbar.h, colours.slider_background);
	DrawRectangle(gr, seekbar.x, seekbar.y, seekbar.w + _scale(6), seekbar.h, colours.slider_colour);

	gr.FillRectangle(volume.x, volume.y, volume.w + _scale(6), volume.h, colours.slider_background);
	DrawRectangle(gr, volume.x, volume.y, volume.w + _scale(6), volume.h, colours.slider_colour);
	gr.FillRectangle(volume.x, volume.y, volume.pos(), volume.h, colours.slider_colour);
	gr.FillRectangle(volume.x + volume.pos() + 1, volume.y + 1, _scale(6) - 1, volume.h - 2, colours.slider_contrast);

	buttons.paint(gr);

	if (fb.IsPlaying) {
		if (img) {
			_drawImage(gr, img, 0, 0, panel.h, panel.h, image.crop_top);
		}

		var normal_font = CreateFontString('Segoe UI', 12);
		var bold_font = CreateFontString('Segoe UI', 12, true);
		gr.WriteText(tfo.title.Eval(), bold_font, colours.title, panel.h + 10, 0, seekbar.x - panel.h - _scale(60), panel.h * 0.6, DWRITE_TEXT_ALIGNMENT_LEADING, DWRITE_PARAGRAPH_ALIGNMENT_CENTER, DWRITE_WORD_WRAPPING_NO_WRAP, DWRITE_TRIMMING_GRANULARITY_CHARACTER);
		gr.WriteText(tfo.artist.Eval(), normal_font, colours.artist, panel.h + 10, panel.h * 0.3, seekbar.x - panel.h - _scale(60), panel.h * 0.7, DWRITE_TEXT_ALIGNMENT_LEADING, DWRITE_PARAGRAPH_ALIGNMENT_CENTER, DWRITE_WORD_WRAPPING_NO_WRAP, DWRITE_TRIMMING_GRANULARITY_CHARACTER);
		gr.WriteText(tfo.playback_time.Eval(), normal_font, colours.time, seekbar.x - _scale(51), seekbar.y, _scale(45), seekbar.h, DWRITE_TEXT_ALIGNMENT_TRAILING, DWRITE_PARAGRAPH_ALIGNMENT_CENTER);
		gr.WriteText(tfo.length.Eval(), normal_font, colours.time, seekbar.x + seekbar.w + _scale(12), seekbar.y, _scale(45), seekbar.h, DWRITE_TEXT_ALIGNMENT_LEADING, DWRITE_PARAGRAPH_ALIGNMENT_CENTER);

		if (fb.PlaybackLength > 0) {
			var pos = seekbar.pos();
			gr.FillRectangle(seekbar.x, seekbar.y, pos, seekbar.h, colours.slider_colour);
			gr.FillRectangle(seekbar.x + pos + 1, seekbar.y + 1, _scale(6) - 1, seekbar.h - 2, colours.slider_contrast);
		}
	}
}

function on_playback_dynamic_info_track(type) {
	if (type == 0) window.Repaint();
	else update_album_art(fb.GetNowPlaying());
}

function on_playback_edited() {
	window.Repaint();
}

function on_playback_new_track(metadb) {
	update_album_art(metadb);
}

function on_playback_pause() {
	buttons.update();
	window.Repaint();
}

function on_playback_seek() {
	seekbar.playback_seek();
}

function on_playback_starting() {
	buttons.update();
	window.Repaint();
}

function on_playback_stop() {
	buttons.update();
	window.Repaint();
}

function on_playback_time() {
	window.RepaintRect(panel.h, 0, seekbar.x - panel.h, panel.h);
}

function on_playlist_stop_after_current_changed() {
	buttons.update();
	window.Repaint();
}

function on_size() {
	panel.size();
	var bar_h = _scale(12);
	seekbar.x = _scale(300);
	seekbar.y = panel.h - bar_h - _scale(10);
	seekbar.w = panel.w - (seekbar.x * 2);
	seekbar.h = bar_h
	volume.x = seekbar.x + seekbar.w + _scale(60) + (bs * 5);
	volume.y = (panel.h - bar_h) / 2;
	volume.w = panel.w - volume.x - _scale(20);
	volume.h = bar_h;
	buttons.update();
}

function on_volume_change() {
	volume.volume_change();
	window.Repaint();
}
