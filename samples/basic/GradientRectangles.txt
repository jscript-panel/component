// ==PREPROCESSOR==
// @name "GradientRectangles"
// @author "marc2003"
// @import "%fb2k_component_path%helpers.txt"
// ==/PREPROCESSOR==

// for re-use by both "brushes" below
var stops = [
	[ 0.0, RGB(227, 9, 64) ],
	[ 0.33, RGB(231, 215, 2) ],
	[ 0.66, RGB(15, 168, 149) ],
	[ 1.0, RGB(19, 115, 232) ]
];

var radial_brush = {
	Centre : [0, 0], // x and y values
	Radius : [0, 0], // x and y values
	Stops: stops
};

var linear_brush = {
	Start : [0, 0], // x and y values
	End : [0, 0], // x and y values
	Stops: stops
};

function on_paint(gr) {
	var w = window.Width / 2;
	var h = window.Height /2;

	// linear brush, horizontal effect, top left
	linear_brush.End = [w, 0];
	gr.FillGradientRectangleAdvanced(0, 0, w, h, JSON.stringify(linear_brush));

	// linear brush, vertical effect, top right
	linear_brush.End = [0, h];
	gr.FillGradientRectangleAdvanced(w, 0, w, h, JSON.stringify(linear_brush));

	// radial brush, bottom left
	radial_brush.Centre = [window.Width / 4, window.Height / 4];
	radial_brush.Radius = [window.Width / 4, window.Height / 4];
	gr.FillGradientRectangleAdvanced(0, h, w, h, JSON.stringify(radial_brush));

	// simple 2 colours, vertical, bottom right
	gr.FillGradientRectangle(w, h, w, h / 2, 0, RGB(255, 0, 0), RGB(0, 0, 255));

	// simple 2 colours, horizontal, bottom right
	gr.FillGradientRectangle(w, h + (h / 2), w, h + (h / 2), 1, RGB(255, 0, 0), RGB(0, 0, 255));
}
